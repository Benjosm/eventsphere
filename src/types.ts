/**
 * Represents an event with its base data plus any additional computed or injected metadata.
 * This interface is used to pass enriched event data into the clustering algorithm.
 */
export interface AugmentedEvent extends Event {
  /** Additional confidence score for the event */
  confidenceScore?: number;
  /** Reliability score of the data source */
  sourceReliability?: number;
  /** ID of the cluster the event belongs to */
  clusterId?: string;
  /** Geographical region name */
  region?: string;
  /** Dynamic metadata storage */
  analysisMetadata?: Record<string, any>;
  /** 128-dimensional vector for clustering algorithm */
  vector: number[];
}

/**
 * The category of the event.
 * (Duplicated from EventStore.ts for type consistency in one file)
 */
export type EventCategory = 'natural_disaster' | 'political' | 'health' | 'other';

/**
 * Represents a thematic label and associated events generated by the AI clustering algorithm.
 */
export interface Cluster {
  /** Unique identifier for the cluster */
  id: string;
  /** List of event IDs belonging to this cluster */
  eventIds: string[];
  /** AI-generated thematic label for the cluster */
  label: string;
}

/**
 * Represents the output structure from the clustering algorithm containing multiple clusters.
 */
export interface ClusteringResult {
  /** Array of clusters generated by the algorithm */
  clusters: Cluster[];
  /** Any additional metadata from the algorithm */
  [key: string]: any;
}

/**
 * Represents a user-created event in the application.
 * (Duplicated from EventStore.ts for type consistency in one file)
 */
export interface Event {
  id: string;
  title: string;
  category: EventCategory;
  latitude: number;
  longitude: number;
  timestamp: number;
  clusterId?: string;
  description?: string;
  sourceUrl?: string;
}
